1-Create 3 different user accounts
    In [6]: User.objects.create(name='Batman', email='bats@bats.com')
    Out[6]: <User: Batmanbats@bats.com>
    In [7]: User.objects.create(name='Superman', email='supes@supes.com')
    Out[7]: <User: Supermansupes@supes.com>
    In [8]: User.objects.create(name='Wonder Woman', email='wonder@wonder.com')
    Out[8]: <User: Wonder Womanwonder@wonder.com>

2-Have the first user create 2 books.
    In [2]: Book.objects.create(uploader = User.objects.get(id=1), name="Battails")
    Out[2]: <Book: Battails - >
    In [3]: Book.objects.create(uploader = User.objects.get(id=1), name="moby dick")
    Out[3]: <Book: moby dick - >
    In [4]: Book.objects.create(uploader = User.objects.get(id=1), name="harry potter")
    Out[4]: <Book: harry potter - >


3-Have the second user create 2 other books.
    In[5]:  Book.objects.create(uploader = User.objects.get(id=2), name="harry and the hendersons")
    Out[5]: <Book: harry and the hendersons - >
    In [6]: Book.objects.create(uploader = User.objects.get(id=2), name="the fall of krypton")
    Out[6]: <Book: the fall of krypton - >

4-Have the third user create 2 other books.
    In [7]: Book.objects.create(uploader = User.objects.get(id=3), name="how to fight")
    Out[7]: <Book: how to fight - >
    In [8]: Book.objects.create(uploader = User.objects.get(id=3), name="how to lose a guy in 10 days")
    Out[8]: <Book: how to lose a guy in 10 days - >

5-Have the first user like the last book and the first book
    In [2]: user1 = User.objects.first()
    In [3]: book1 = Book.objects.first()
    In [7]: last_book = Book.objects.last()
    In [8]: user1.likes.add(last_book)
        check:  In [9]: user1.likes.all()
                Out[9]: <QuerySet [<Book: Battails -  - Batman - bats@bats.com>, <Book: how to lose a guy in 10 days -  - Wonder Woman - wonder@wonder.com>]>

6-Have the second user like the first book and the third book
    In [5]: user2 = User.objects.get(id=2)
    In [6]: book2 = Book.objects.first()
    In [7]: user2.likes.add(book2)
    In [10]: book3 = Book.objects.get(id=3)
    In [11]: user2.likes.add(book3)
        check:  In [12]: user2.likes.all()
                Out[12]: <QuerySet [<Book: Battails -  - Batman - bats@bats.com>, <Book: harry potter -  - Batman - bats@bats.com>]>
7-Have the third user like all books
    In [13]: user3 = User.objects.get(id=3)
    In [51]: bookies = Book.objects.filter(id__in=[1,2,3,4,5,6,7])
    In [52]: for book in bookies:
        ...:     user3.likes.add(book)
        ...:

    In [53]: user3.likes.all()
    Out[53]: <QuerySet [<Book: Battails -  - Batman - bats@bats.com>, <Book: moby dick -  - Batman - bats@bats.com>, <Book: harry potter -  - Batman - bats@bats.com>, <Book: harry and the hendersons -  - Superman - supes@supes.com>, <Book: the fall of krypton -  - Superman - supes@supes.com>, <Book: how to fight -  - Wonder Woman - wonder@wonder.com>, <Book: how to lose a guy in 10 days -  - Wonder Woman - wonder@wonder.com>]>

8-Display all users who like the first book
    In [35]: book1 = Book.objects.first()
    In [41]: users = User.objects.filter(likes=book1)
    In [42]: users
    Out[42]: <QuerySet [<User: Batman - bats@bats.com>, <User: Superman - supes@supes.com>, <User: Wonder Woman - wonder@wonder.com>]>

9-Display the user who uploaded the first book
reason: the __str__ method was removed from the models.py so now you have to enter the exact query to get the info
    In [2]: book1 = Book.objects.get(id=1)
      check:  In [3]: book1
              Out[3]: <Book: Book object>
    In [4]: book1.name
    Out[4]: u'Battails'
    In [5]: book1.uploader.name
    Out[5]: u'Batman'

10-Display all users who like the second book
    In [6]: book2 = Book.objects.get(id=2)
    In [18]: names = book2.likes.all()
    In [19]: for name in names:
        ...:     print name.name
        ...:
    Wonder Woman

11-Display the user who uploaded the second book
    In [29]: book2 = Book.objects.filter(id=2).first()
        check:  In [30]: book2.name
                Out[30]: u'moby dick'
    In [36]: book2.uploader.name -->(putting the empty parenthesis after .name, will give you an error here)
    Out[36]: u'Batman'

BONUS: return all the books that the 3d user has liked
    In [20]: user3 = User.objects.get(id=3)
      check:  In [24]: user3.likes.all()
              Out[24]: <QuerySet [<Book: Book object>, <Book: Book object>, <Book: Book object>, <Book: Book object>, <Book: Book object>, <Book: Book object>, <Book: Book object>]>
              In [27]: likes = user3.likes.all()

    In [28]: for book in likes:
        ...:     print book.name
        ...:
    Battails
    moby dick
    harry potter
    harry and the hendersons
    the fall of krypton
    how to fight
    how to lose a guy in 10 days
