Important Notes

belt_reviewer_1 == the name of your repository on GitLab
main == the name you used for the django-admin startproject command
52.55.81.198 == the public IP address of your Amazon EC2 instance
Deployment Instructions

Follow instructions on Learn to create a new Amazon EC2 instance. Make sure to select Ubuntu 16.04. You can use an existing .pem file or you can create a new one. Save the .pem file in a location OUTSIDE OF YOUR PROJECT FOLDER. A folder on the desktop for .pem files is a good idea.

Create a new repository on GitLab for your project.

Activate your VIRTUAL ENVIRONMENT then navigate to your project folder and make a list of your dependencies

1-
pip freeze > requirements.txt
***Setup .gitignore file

2-
vim .gitignore
***Edit the contents of .gitignore like so

*.pyc
venv/
.DS_Store
.idea
.vs_code

***Push your project to GitLab
3-
git init
4-
git remote add origin https://gitlab.com/kylemarienthal/belt_reviewer_1.git
5-
git add .
6-
git commit -m 'initial commit'
7-
git push -u origin master
8-
deactivate your environment???
***Navigate to the directory where you saved your .pem file
9-
cd ../../aws

***IF you have NEVER used this .pem file before to connect to an Amazon Instance then change permissions

10-
chmod 400 aws_credentials.pem
***Now, connect to your Amazon Instance

11-
ssh -i aws_credentials.pem ubuntu@52.55.81.198
***Update the Ubuntu machine

12-
sudo apt-get update
13-
sudo apt-get install python-pip python-dev nginx git
14-
sudo apt-get update
15-
sudo pip install virtualenv
***Clone your repository

16-
***(clipboard copy on gitlab make sure its HTTPS!!!!)
git clone https://gitlab.com/kylemarienthal/belt_reviewer_1.git

***Create virtual environment and install dependencies
(username:kylemarienthal)
(password:put in gitlab password)
17-
cd belt_reviewer_1
18-
virtualenv venv
19-
source venv/bin/activate
20-
pip install -r requirements.txt
21-
pip install django bcrypt django-extensions
22-
pip install gunicorn
***Update your settings.py file

23-
cd main
24-
sudo vim settings.py
***You're now using vim, press i to go into Insert Mode and edit the following lines

# Inside settings.py
# modify these lines
25-
DEBUG = False
26-
ALLOWED_HOSTS = ['52.55.81.198']
# add the line below to the bottom of the file
27-
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
***After editing, press esc to exit Insert Mode. Then, type :wp and press Enter to exit VIM.

***Collect your static files

28-
cd ..
29-
python manage.py collectstatic
***If a yes/no prompt appears. Type yes
ip:~RepoName$ gunicorn --bind 0.0.0.0:8000 main.wsgi:application (should return starting gunicorn 19.6.0, listening at: http://0.0.0.0.8000, using worker:sync, Booting worker w/ PID:8700)

***Deactivate your virutal environment and create the gunicorn.service file

30-
deactivate
31-
sudo vim /etc/systemd/system/gunicorn.service
***You're now using vim, press i to go into Insert Mode and paste the following code

32-
[Unit]
Description=gunicorn daemon
After=network.target
[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/belt_reviewer_1
ExecStart=/home/ubuntu/belt_reviewer_1/venv/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/belt_reviewer_1/main.sock main.wsgi:application
[Install]
WantedBy=multi-user.target
***Edit the code by replacing belt_reviewer_1 and main with the appropriate data. Then, press esc to exit Insert ***Mode. Then, type :wq and press Enter to exit VIM.

Restart Gunicorn
***anytime you make a change to those files you need to restart by using all 3 of the following***
33-
sudo systemctl daemon-reload
34-
sudo systemctl start gunicorn
35-
sudo systemctl enable gunicorn
***Edit your Nginx Files, replace belt_reviewer_1 with the appropriate data

36-
cd /etc/nginx/sites-available
37-
sudo vim belt_reviewer_1
***You're now using vim, press i to go into Insert Mode and paste the following code

38-
server {
  listen 80;
  server_name 52.55.81.198;
  location = /favicon.ico { access_log off; log_not_found off; }
  location /static/ {
      root /home/ubuntu/belt_reviewer_1;
  }
  location / {
      include proxy_params;
      proxy_pass http://unix:/home/ubuntu/belt_reviewer_1/main.sock;
  }
}
***Replace 52.55.81.198, belt_reviewer_1, and main with the appropriate data. Then, press esc to exit ***Insert Mode. Then, type :wq and press enter to exit VIM.

***Remove the default file and create the symbolic link

39-(run this command in sites-available, and sites-enabled)
sudo rm default
40-(***you can check to see if the symbolic link was done correctly if the belt_reviewer_1 is green by typing: cd ../sites-enabled/ hit 'dir'***)
sudo ln -s /etc/nginx/sites-available/belt_reviewer_1 /etc/nginx/sites-enabled
41-
sudo nginx -t
Restart Nginx

sudo service nginx restart
You're deployed! Just type your public-ip into the address bar of your web browser and you should see your website!
